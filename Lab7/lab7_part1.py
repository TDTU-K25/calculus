# -*- coding: utf-8 -*-
"""Lab7.ipynb

Automatically generated by Colaboratory.

Original file is located at
    https://colab.research.google.com/drive/1eGyzWeGkPiz6SO_XrtR6v00Ia9CPeOlS

Exercise 1: Find the specific function values:
"""

def f1a(x, y):
  return x**2 + x*y**3

print("a)")
print(f1a(0,0))
print(f1a(-1,1))
print(f1a(2,3))
print(f1a(-3,-2))

def f1b(x, y , z):
  return (x-y) / (y**2 + z**2)

print()

print("b)")
print(f1b(3,-1,2))
print(f1b(1,1/2,1/4))
print(f1b(0,-1/3,0))
print(f1b(2,2,100))

"""Exercise 2: Plot the graph of the functions"""

from matplotlib import pyplot as plt
import numpy as np
from mpl_toolkits.mplot3d import Axes3D

x = np.linspace(-10,10,9)
y = np.linspace(-10,10,9)

X, Y = np.meshgrid(x,y) # tạo mảng 2 chiều

f2a = np.cos(X) * np.cos(Y) * np.e**(-np.sqrt(X**2+Y**2) / 4)

fig = plt.figure() #  create a figure object
ax = Axes3D(fig) # created just like any other axes using the projection ='3d' keyword
ax.plot_surface(X, Y, f2a) # Demonstrates plotting a 3D surface colored with the coolwarm colormap

plt.xlabel("x-axis")
plt.xlabel("y-axis")
plt.title("Câu a")
plt.show()

"""Exercise 3: Find the first-order partial derivatives of the function f(x; y), Then plot the function f(x; y)
and the first order partial derivative of f(x; y) with regard to x, and y, respectively
"""

from sympy import *
import numpy as np

x, y = sp.symbols("x, y")

f3a = 2*x**2 - 3*y - 4
print("(a) f(x,y) = 2*x**2 - 3*y - 4")
print("The first-order of x partial derivatives of the function f(x, y) = {}".format(diff(f3a,x,1)))
print("The first-order of y partial derivatives of the function f(x, y) = {}".format(diff(f3a,y,1)))

print()

f3b = (x**2-1) * (y+2)
print("(b) f(x,y) = (x**2-1) * (y+2)")
print("The first-order of x partial derivatives of the function f(x, y) = {}".format(diff(f3b,x,1)))
print("The first-order of y partial derivatives of the function f(x, y) = {}".format(diff(f3b,y,1)))

print()

f3c = x**2 - x*y + y**2
print("(c) f(x,y) = x**2 - x*y + y**2")
print("The first-order of x partial derivatives of the function f(x, y) = {}".format(diff(f3c,x,1)))
print("The first-order of y partial derivatives of the function f(x, y) = {}".format(diff(f3c,y,1)))

print()

f3d = 5*x*y - 7*x**2 - y**2 + 3*x - 6*y + 2
print("(d) f(x,y) = 5*x*y − 7*x**2 − y**2 + 3*x − 6*y + 2")
print("The first-order of x partial derivatives of the function f(x, y) = {}".format(diff(f3d,x,1)))
print("The first-order of y partial derivatives of the function f(x, y) = {}".format(diff(f3d,y,1)))

print()

f3e = (x*y-1)**2
print("(e) f(x,y) = (x*y-1)**2")
print("The first-order of x partial derivatives of the function f(x, y) = {}".format(diff(f3e,x,1)))
print("The first-order of y partial derivatives of the function f(x, y) = {}".format(diff(f3e,y,1)))

print()

f3f = (2*x - 3*y)**3
print("(f) f(x,y) = (2*x - 3*y)**3")
print("The first-order of x partial derivatives of the function f(x, y) = {}".format(diff(f3f,x,1)))
print("The first-order of y partial derivatives of the function f(x, y) = {}".format(diff(f3f,y,1)))

print()

f3g = sp.sqrt(x**2 + y**2)
print("(f) f(x,y) = sqrt(x**2 + y**2)")
print("The first-order of x partial derivatives of the function f(x, y) = {}".format(diff(f3g,x,1)))
print("The first-order of y partial derivatives of the function f(x, y) = {}".format(diff(f3g,y,1)))

print()

f3h = (x**3 + y/2)**(2/3)
print("(h) f(x,y) = (x**3 + y/2)**(2/3)")
print("The first-order of x partial derivatives of the function f(x, y) = {}".format(diff(f3h,x,1)))
print("The first-order of y partial derivatives of the function f(x, y) = {}".format(diff(f3h,y,1)))

print()

f3i = 1 / (x+y)
print("(i) f(x,y) = 1 / (x+y)")
print("The first-order of x partial derivatives of the function f(x, y) = {}".format(diff(f3i,x,1)))
print("The first-order of y partial derivatives of the function f(x, y) = {}".format(diff(f3i,y,1)))

print()

f3j = x / (x**2 + y**2)
print("(j) f(x,y) = x / (x**2 + y**2)")
print("The first-order of x partial derivatives of the function f(x, y) = {}".format(diff(f3j,x,1)))
print("The first-order of y partial derivatives of the function f(x, y) = {}".format(diff(f3j,y,1)))

print()

f3k = (x + y) / (x*y - 1)
print("(k) f(x,y) = (x + y) / (x*y - 1)")
print("The first-order of x partial derivatives of the function f(x, y) = {}".format(diff(f3j,x,1)))
print("The first-order of y partial derivatives of the function f(x, y) = {}".format(diff(f3j,y,1)))

print()

f3l = x / (x**2 + y**2)
print("(j) f(x,y) = x / (x**2 + y**2)")
print("The first-order of x partial derivatives of the function f(x, y) = {}".format(diff(f3j,x,1)))
print("The first-order of y partial derivatives of the function f(x, y) = {}".format(diff(f3j,y,1)))

print()

f3m = x / (x**2 + y**2)
print("(j) f(x,y) = x / (x**2 + y**2)")
print("The first-order of x partial derivatives of the function f(x, y) = {}".format(diff(f3j,x,1)))
print("The first-order of y partial derivatives of the function f(x, y) = {}".format(diff(f3j,y,1)))

print()

# Vẽ đồ thị

list_x = np.arange(-10,10,0.1)
list_y = np.arange(-10,10,0.1)

X, Y = np.meshgrid(list_x,list_y)

f3a_p = 2*X**2 - 3*Y - 4
df3a_x = 4*X
df3a_y = -3

fig = plt.figure()
ax = Axes3D(fig)
ax.plot_surface(X, Y, f3a_p)
ax.plot_surface(X, Y, df3a_x)

plt.title("f(x,y) = 2x**2 − 3y − 4")
plt.show()